//index.js

//获取应用实例
var app = getApp()
var timeUtil=require("../../utils/util.js")
 
var today;
var _thisDay;
var year;
var month;

var showAgain = false;    //控制显示的次数
var ifshow = false;   //地图按钮
var ifLogin = false;  //是否登录过
var scaleJust = false;  //打卡按钮缩放后恢复原样

var stepCan = 10000;   //达到10000步显示动画
var startTime = new Date('2017/9/1').getTime();   //9月1号开始显示地图

/*获取当月的天数日历*/
function getMonthCount(curyear, curmonth,that) {
  
  var monthArray = [];
  // From the beginning day of the week
  var beginDayOfWeek = new Date(curyear, curmonth, 1).getDay();
  // This month total days
  var daysOfMonth = new Date(curyear, curmonth + 1, 0).getDate();
  console.log(daysOfMonth);
  // 42: 7*6 matrix 
  for (var i = 0; i < 42 - beginDayOfWeek; i++) { 
    monthArray[i + beginDayOfWeek] = {};
    if (i < daysOfMonth){
      monthArray[i + beginDayOfWeek]["date"] = i + 1;
      monthArray[i + beginDayOfWeek]["dateStr"] = curyear + "-" + timeUtil.formatNumber(curmonth+1) + "-" + timeUtil.formatNumber(i + 1); 
    }else{
      break;
    }
  }
  // console.info(monthArray);
  return monthArray
}
/////////////////////////////打卡历史//////////////////////////////////
function signHistory(that,month) {
  var dateNow = new Date();
  wx.request({
    url: 'https://wx.yingccn.com/weChatRunlist.json',
    data: JSON.stringify({ year: year, month: month + 1, sessionId: wx.getStorageSync('loginSessionId') }),
    method: 'POST',
    success: function (res) {
      console.log(res);
      var list = res.data.data;
      var checkDate = {};
      for (var ind in list) {
        var obj = list[ind];
        checkDate[obj.checkDate] = obj;
        // console.log(obj);
      }

      that.setData({
        checkDate: checkDate,
        daysList: getMonthCount(year, month, that),   //显示全月的日期
      });

      var lastObj = list[list.length - 1];
      var _checkLastDate = lastObj.checkDate
      var _checkDate = wx.getStorageSync('signTodayNow');

      var _getCheck = lastObj['checkSum'];
      var _check = lastObj['checkContinuous'];

      var today = timeUtil.formatTime(new Date(Date.now()))
      console.log(_checkDate+"   sad  "+today);
      if (_checkDate == today || (_checkLastDate == today)) {
        that.setData({ ifCheck: '刷新步数' })
      } else {
        that.setData({ ifCheck: '打 卡' })
      }
      that.setData({
        getCheck: _getCheck,
        check: _check,
      })
      console.log("startTime="+startTime);
      if(dateNow.getTime() >= startTime){
        getMap(checkDate, that, list);      //获取地图
      } 
    },
    fail: function () {
      wx.showToast({
        title: '获取打卡记录失败',
        icon: 'loading',
      })
    }
  })
}
////////////////////////获取登录信息成功后/再次进入页面时获取新数据///////////////
function loginLoad(sessionId ,that) {
  wx.getWeRunData({
    success: function (res) {
      const encryptedData = res.encryptedData
      const iv = res.iv
      wx.request({
        method: 'POST',
        url: 'https://wx.yingccn.com/weChatDecrypt.json',
        data: JSON.stringify({ encryptedData: encryptedData, iv: iv, sessionId: sessionId }),
        success: function (runInfo) {
          console.log(runInfo);
          var stepInfo = runInfo.data.data.stepInfoList;
          var len = stepInfo.length;
          var _step = stepInfo[len - 1]['step'];

          that.setData({steps: _step})

          wx.setStorageSync('stepInfoLast', _step)
          signHistory(that,month);        //加载-数据绑定
        }
      })
    },
    fail: function () {
      console.log("获取微信运动失败")
      wx.showToast({
        title: '获取微信运动失败',
        icon: 'loading',
      })
    }
  })
}
/////////////////////////////////
Page({
  data: {
    // motto: 'Hello World',
    // userInfo: {},
    ifCheck:"打 卡",
    getCheck: 0,      //打卡总天数
    check: 0,         //连续天数
    ifRight: true,     //是否本月
    showView: false,      //小标是否显示
    ifOn: true,
    getCheckLine: 0,    //足迹个数
  },
  ///////////////////////////////翻页改变日期/////////////////////////////
  bindDateChange: function (e) {
    var dateNow = new Date();
    var _value = e.detail.value;
    console.log(_value);
    var _month = _value.split("-")[1];
    var _ifRight = (_month - 1 == month)? true :false;
    this.setData({
      date: e.detail.value.slice(0,7),
      daysList: getMonthCount(year, _month-1,this),
      ifRight: _ifRight
    })
    signHistory(this,_month-1)
  },
  ////////////////////////点击收起/显示////////////////////////
  showClick: function(){
    var that = this;
    var dateNow = new Date();
    if (dateNow.getTime() >= startTime) {
      if (that.data.ifOn) {
        if (!showAgain) {
          console.log("0000")
          createAni(that);

        } else {
          console.log(that.data.ifOn)
          that.animation.height('420rpx').step();
          that.topslide.height('250rpx').step();
          that.topslide1.height('310rpx').step();
          that.setData({
            animationData: that.animation.export(),
            topAnimation: that.topslide.export(),
            topAnimation1: that.topslide1.export(),
            ifOn: false,
            scaleJust: false,
          })
          setTimeout(function () {
            that.setData({
              ifshow: true,
            })
          }.bind(that), 600)
        }
      } else {
        that.animation.height(0).step()
        that.topslide.height('400rpx').step()
        that.topslide1.height('500rpx').step()
        that.setData({
          animationData: that.animation.export(),
          topAnimation: that.topslide.export(),
          topAnimation1: that.topslide1.export(),
          ifOn: true,
          ifshow: false,
          scaleJust: true,
        })
      }
    }
  },

  /////////////////////////////////点击打卡///////////////////////////////
  signUp: function(){
    var that = this;
    
    var dateNow = new Date();
    console.log("datenow="+dateNow+"   starttime="+startTime);
    if (dateNow.getTime() >= startTime) {
      if (wx.getStorageSync('stepInfoLast') >= stepCan && (!showAgain)) {
        showAgain = true;
        createAni(that);
      }
    }
    
    var getStep = wx.getStorageSync('stepInfoLast');
    app.getUserInfo(function (userInfo) {
      wx.request({
        url: 'https://wx.yingccn.com/weChatRuncheck.json',
        data: JSON.stringify({ step: getStep, userInfo: userInfo, sessionId: wx.getStorageSync('loginSessionId') }),
        method: 'POST',
        success: function (res) {
          console.log(res);
          if (res.data.success) {
            //成功上传步数后将打卡时间存起来
            var checkTodayNow=timeUtil.formatTime(new Date(Date.now()))
            wx.setStorageSync('signTodayNow', checkTodayNow);
            var checkSum = res.data.data.checkSum;
            var checkContinuous = res.data.data.checkContinuous;
            that.setData({
              ifCheck: '刷新步数',
              getCheck: checkSum,
              check: checkContinuous,
              daysList: getMonthCount(year, month, that),
            })
            //再次调用打卡历史
            signHistory(that,month);
            wx.showToast({
              title: '上传成功',
            })
          }
        },
        fail: function () {
          wx.showToast({
            title: '上传数据失败',
            icon: 'loading',
          })
        }
      })
    })
    
  },
  clickMe: function(e){
    var that = this;
    if(e.currentTarget.id){
      that.setData({
        showView: (!that.data.showView)
      })
      console.log(!that.data.showView)
    }
  },
  ///////////////////////////////去排行榜/////////////////////////////////
  goList: function(){
    wx.navigateTo({
      url: '../logs/logs',
    })
  },
  ///////////////////////////////页面加载///////////////////////////////////
  onLoad: function (options) {
    var that = this;
    console.log('index---------onLoad()')
    showView: (options.showView == "true" ? true : false)
   
    wx.login({
      success: function (data) {
        ifLogin = true;
        if (data.code) {
          //发起网络请求
          console.log("data.code="+data.code);
          wx.request({
            url: 'https://wx.yingccn.com/weChatLogin.json',
            data: JSON.stringify({ code: data.code }),
            method: 'POST',
            success: function (info) {
              console.log("wechatlogin");
              console.log(info);
              const sessionId = info.data.data.sessionId
              // console.log(sessionId);
              wx.setStorageSync("loginSessionId", sessionId)
              loginLoad(sessionId, that)
            },
            fail: function () {
              wx.showToast({
                title: '获取登录信息失败',
                icon: 'loading',
              })
            }
          });
        } else {
          console.log('获取用户登录态失败！' + res.errMsg)
        }
      },
      fail: function () {
        wx.showToast({
          title: '登录失败',
          icon: 'loading',
        })
      }
    })
    wx.checkSession({
      success: function () {
        //session 未过期，并且在本生命周期一直有效
      },
      fail: function () {
        //登录态过期
        wx.login() //重新登录
      }
    })
  },
  /**
   *  监听页面显示，
   */
  onShow: function () {
    console.log('index---------onShow()');
    var that = this;
    var dateNow = new Date();

    today = timeUtil.formatTime(dateNow);
    _thisDay = parseInt(today.split("-")[2]);
    year = dateNow.getFullYear();
    month = dateNow.getMonth();
    
    // From the beginning day of the week
    var beginDayOfWeek = new Date(year, month, 1).getDay();
    that.setData({
      date: today.slice(0, 7),//日期显示
      today: _thisDay + beginDayOfWeek - 1, //格式后当月今日的序号
      daysList: getMonthCount(year, month, that),
    })
    if(ifLogin){
      loginLoad(wx.getStorageSync('loginSessionId'), that)
    }
    
    
  },
  onReady: function () {
    console.log('index---------onReaday()');
  },
  onHide: function () {
    console.log('index---------onHide()')
  },
  onUnload: function () {
    console.log('index---------onUnload')
  },
  ///////////////////////////////分享//////////////////////////////
  onShareAppMessage: function(res){
    wx.showShareMenu({
      withShareTicket: true
    })
    if(res.from === 'button'){
      //来自页面内转发按钮
      console.log(res.target);
    }
    return {
      title: "快来看看今天走了几步吧",
      path: "pages/index/index",
      success: function(res){
        console.log("转发成功");
      },
      fail: function(){
        console.log("转发失败");
      }
    }
  }
})
function getMap(checkDate,that,list){
  var circle_arr = [
    '<circle cx="512.676" cy= "358.103" r= "5.314" />',
    '<circle cx="409.662" cy="351.474" r="3.234"/>',
    '<circle cx="365.714" cy="341.638" r="3.234"/> ',
    '<circle cx="341.169" cy="330.041" r="3.234"/>',
    '<circle cx="312.301" cy="309.345" r="3.234"/>',
    '<circle cx="288.469" cy="286.87" r="3.234"/>',
    '<circle cx="258.878" cy="275.823" r="3.234"/>',
    '<circle cx="240.546" cy="286.125" r="3.234"/>',
    '<circle cx="283.712" cy="325.26" r="3.234"/>',
    '<circle cx="202.872" cy="345.15" r="3.234"/>',
    '<circle cx="162.489" cy="277.762" r="3.234"/>',
    '<circle cx="162.93" cy="253.74" r="3.234"/>',
    '<circle cx="179.419" cy="227.508" r="3.234"/>',
    '<circle cx="181.392" cy="199.742" r="3.234"/>',
    '<circle cx="179.978" cy="177.645" r="3.234"/>',
    '<circle cx="199.419" cy="146.265" r="3.234"/>',
    '<circle cx="208.389" cy="124.366" r="3.234"/>',
    '<circle cx="241.336" cy="98.791" r="3.234"/>',
    '<circle cx="267.602" cy="76.682" r="3.234"/>',
    '<circle cx="351.93" cy= "56.651" r= "5.314" /> '
  ];
  var unSignCircle_arr = [
    '<circle fill="red" cx="512.676" cy= "358.103" r= "5.314" />',
    '<circle fill="red" cx="409.662" cy="351.474" r="3.234"/>',
    '<circle fill="red" cx="365.714" cy="341.638" r="3.234"/> ',
    '<circle fill="red" cx="341.169" cy="330.041" r="3.234"/>',
    '<circle fill="red" cx="312.301" cy="309.345" r="3.234"/>',
    '<circle fill="red" cx="288.469" cy="286.87" r="3.234"/>',
    '<circle fill="red" cx="258.878" cy="275.823" r="3.234"/>',
    '<circle fill="red" cx="240.546" cy="286.125" r="3.234"/>',
    '<circle fill="red" cx="283.712" cy="325.26" r="3.234"/>',
    '<circle fill="red" cx="202.872" cy="345.15" r="3.234"/>',
    '<circle fill="red" cx="162.489" cy="277.762" r="3.234"/>',
    '<circle fill="red" cx="162.93" cy="253.74" r="3.234"/>',
    '<circle fill="red" cx="179.419" cy="227.508" r="3.234"/>',
    '<circle fill="red" cx="181.392" cy="199.742" r="3.234"/>',
    '<circle fill="red" cx="179.978" cy="177.645" r="3.234"/>',
    '<circle fill="red" cx="199.419" cy="146.265" r="3.234"/>',
    '<circle fill="red" cx="208.389" cy="124.366" r="3.234"/>',
    '<circle fill="red" cx="241.336" cy="98.791" r="3.234"/>',
    '<circle fill="red" cx="267.602" cy="76.682" r="3.234"/>',
    '<circle fill="red" cx="351.93" cy= "56.651" r= "5.314" /> '
  ]
  var text_arr = [
    '<text transform="matrix(1 0 0 1 363.4004 331)" font-size="14"> 通道会议 </text>',
    '<text transform= "matrix(1 0 0 1 300.3999 347.0332)" font-size="14"> 黎平会议 </text>',
    '<text transform= "matrix(1 0 0 1 323.2891 309.3701)" font-size="14"> 强渡乌江天险 </text>',
    '<text transform= "matrix(1 0 0 1 297.9292 291.0078)" font-size="14"> 遵义会议 </text>',
    '<text transform= "matrix(1 0 0 1 236.4634 263.0078)" font-size="14"> 四渡赤水 </text>',
    '<text transform= "matrix(1 0 0 1 184.3984 300.6816)" font-size="14"> 强渡嘉陵江 </text>',
    '<text transform= "matrix(1 0 0 1 94.3984 281.2979)" font-size="14"> 强渡大渡河 </text>',
    '<text transform= "matrix(1 0 0 1 94.3984 259.8525)" font-size="14"> 飞夺泸定桥 </text>',
    '<text transform= "matrix(1 0 0 1 187.0991 232.7861)" font-size="14"> 两河口会议 </text>',
    '<text transform= "matrix(1 0 0 1 191.2817 203.4512)" font-size="14"> 毛儿盖会议 </text>',
    '<text transform= "matrix(1 0 0 1 118.9482 183.7021)" font-size="14"> 包座战役 </text>',
    '<text transform= "matrix(1 0 0 1 207.6694 152.5088)" font-size="14"> 俄届政治局国大会议 </text>',
    '<text transform= "matrix(1 0 0 1 139.9482 127.3896)" font-size="14"> 激战腊子口 </text>',
    '<text transform= "matrix(1 0 0 1 251.7002 101.3896)" font-size="14"> 直罗镇战役 </text>',
    '<text transform= "matrix(1 0 0 1 275.2002 79.8896)" font-size="14"> 吴起镇会议 </text>',
    '<text transform= "matrix(1 0 0 1 360.7002 60.8896)" font-size="14"> 会宁 </text>',
    '<text transform= "matrix(1 0 0 1 215.5581 328.6816)" font-size="14"> 巧渡金沙江 </text>',
    '<text transform= "matrix(1 0 0 1 180.1191 365.3467)" font-size="14"> 会理会议 </text>',
    '<text transform= "matrix(1 0 0 1 384.9141 369.666)" font-size="14"> 血战湘江 </text>',
    '<text transform= "matrix(1 0 0 1 521.248 361.332)" font-size="14"> 瑞金 </text>'
  ];
  var line_arr = [
    '<g><path d= "M515.079,338.042l-0.061-0.024c-0.429-0.175-0.756-0.176-1.046-0.177c-0.277,0.001-0.499,0-0.741-0.153   c-0.329-0.207-0.779-0.251-0.948-0.267c-0.246-0.022-0.493-0.021-0.734-0.019c-0.195,0.002-0.397,0.004-0.593-0.01   c-0.059-0.004-0.115,0-0.169,0.006c-0.056,0.003-0.107,0.007-0.16,0.004c-0.314-0.027-0.587-0.062-0.858-0.104   c-0.153-0.024-0.323-0.103-0.505-0.184c-0.154-0.07-0.315-0.143-0.479-0.188c-0.063-0.017-0.132-0.053-0.206-0.089   c-0.071-0.037-0.146-0.075-0.222-0.099c-0.392-0.125-0.77-0.216-1.154-0.278c-0.479-0.076-0.911-0.133-1.38-0.061   c-0.085,0.013-0.172,0.029-0.258,0.052c-0.295,0.072-0.603,0.229-0.899,0.38c-0.255,0.129-0.495,0.251-0.694,0.304l-0.024,0.007   c-0.273,0.071-0.559,0.146-0.858,0.191c-0.641,0.099-1.195,0.036-1.739-0.199c-0.002-0.021-0.008-0.037-0.025-0.052l-0.027-0.025   l-0.037,0.006c-0.02,0.004-0.063,0.019-0.067,0.085c0,0.008-0.001,0.019-0.001,0.034c-0.003,0.036-0.003,0.066-0.005,0.094   c-0.004,0.098-0.005,0.143-0.016,0.273c-0.002,0.022-0.004,0.047-0.007,0.069c-0.004,0.052-0.009,0.103-0.014,0.151   c-0.074,0.731-0.777,1.403-1.458,2.053c-0.733,0.701-1.427,1.36-1.399,2.106c0.039,1.096-1.157,2.634-1.978,3.33l-0.105,0.09   l0.13,0.046c1.043,0.373,3.451,1,4.317,1.092c0.167,0.017,0.42-0.003,0.818-0.064c0.193-0.029,0.403-0.066,0.606-0.102   c0.205-0.036,0.416-0.073,0.612-0.104c0.266-0.04,0.642-0.092,0.852-0.063c0.229,0.03,0.567-0.016,0.986-0.079l0.127-0.021   c0.479-0.073,1.076-0.166,1.41-0.053c0.146,0.049,0.293,0.104,0.438,0.161c0.137,0.055,0.275,0.119,0.407,0.182   c0.227,0.106,0.439,0.206,0.647,0.262c0.29,0.076,0.58,0.137,0.887,0.184c0.252,0.039,0.514,0.068,0.824,0.094   c0.044,0.004,0.093,0.021,0.146,0.04c0.062,0.021,0.124,0.044,0.19,0.048c0.201,0.016,0.399-0.002,0.592-0.019   c0.214-0.02,0.435-0.036,0.661-0.012c0.224,0.022,0.431,0.052,0.633,0.087c0.606,0.104,1.235,0.213,1.995,0.532l0.095,0.04   L515.079,338.042z" /><path fill="#E60012" d= "M512.466,356.348c0.043-0.008,0.077-0.045,0.084-0.094l2.853-18.217l0.043,0.006   c0.032,0.006,0.066,0.006,0.101,0c0.122-0.019,0.217-0.104,0.233-0.215c0.009-0.06-0.005-0.118-0.038-0.171   c0-0.003,0.001-0.006,0.001-0.009c0.01-0.064-0.011-0.133-0.057-0.185c-0.043-0.049-0.104-0.082-0.171-0.093l-0.01-0.002   l0.006-0.035c0.177-0.047,0.311-0.192,0.338-0.376c0.021-0.121-0.01-0.244-0.083-0.345s-0.181-0.165-0.303-0.186   c-0.047-0.007-0.095-0.008-0.142,0c-0.201,0.031-0.357,0.188-0.39,0.388c-0.023,0.157,0.036,0.317,0.156,0.423l-0.01,0.063   c-0.029-0.005-0.061-0.004-0.087,0.001c-0.11,0.018-0.195,0.096-0.21,0.193c-0.001,0.004-0.002,0.007-0.002,0.01   c-0.05,0.039-0.08,0.092-0.091,0.152c-0.011,0.07,0.013,0.145,0.063,0.201c0.048,0.056,0.115,0.092,0.189,0.104l0.031,0.004   l-2.807,17.938c-0.05,0.315-0.046,0.333-0.021,0.368c0.015,0.019,0.033,0.03,0.058,0.033l0.232,0.036   C512.446,356.349,512.457,356.349,512.466,356.348z" /></g>',
    '<g><g><path d="M409.546,353.039c9.505-0.521,16.068,8.359,24.758,10.65c8.824,2.325,17.554-1.976,25.728-4.73    c11.737-3.958,21.245-0.458,32.722,1.768c6.839,1.326,14.446,1.325,20.525-2.437c1.111-0.688-0.576-0.967-1.201-0.58    c-9.244,5.722-20.562,1.197-30.158-0.968c-8.214-1.854-15.834-0.887-23.739,1.777c-4.095,1.382-8.072,3.013-12.279,4.048    c-6.709,1.649-12.15-0.188-17.824-3.5c-5.788-3.379-11.264-7.489-18.268-7.106C408.848,352.014,408.209,353.111,409.546,353.039    L409.546,353.039z" /></g></g>',
    '<g><g><path d="M366.896,342.426c6.153,1.954,12.002,5.172,18.355,6.456c7.096,1.435,14.54,2.232,21.779,2.345    c0.631,0.011,2.088-0.933,0.789-0.952c-7.467-0.115-15.504-0.868-22.768-2.68c-5.703-1.422-11.002-4.243-16.598-6.021    C367.939,341.41,366.193,342.202,366.896,342.426L366.896,342.426z" /></g></g>',
    '<g><g><path d="M342.831,331.669c7.946-0.35,14.125,6.095,20.346,10.119c0.675,0.436,2.396-0.497,1.5-1.076    c-6.747-4.364-13.056-10.759-21.653-10.381C341.956,330.378,341.51,331.728,342.831,331.669L342.831,331.669z" /></g></g>',
    '<g><g><path d="M311.053,310.153c8.104,0.049,12.208,2.443,16.417,9.406c2.84,4.7,5.799,10.216,11.664,11.32    c0.463,0.087,2.139-0.657,1.584-0.762c-7.275-1.371-10.058-9.678-13.921-15.053c-3.61-5.025-8.734-5.686-14.497-5.721    C311.885,309.345,310.094,310.147,311.053,310.153L311.053,310.153z" /></g></g>',
    '<g><g><path d="M286.885,287.631c4.813,1.61,8.194,5.961,12.133,8.952c4.56,3.462,8.468,6.14,11.193,11.426    c0.254,0.493,2.098-0.193,1.932-0.518c-2.611-5.064-6.565-8.514-11.307-11.574c-4.337-2.8-7.305-7.354-12.367-9.048    C288.023,286.721,286.294,287.434,286.885,287.631L286.885,287.631z" /></g></g>',
    '<g><g><path d="M262.056,275.825c6.393-0.726,11.272-8.401,17.788-7.271c6.792,1.178,6.609,11.779,6.615,16.805    c0.001,0.861,1.938,0.467,1.938-0.221c-0.007-6.065,0.086-14.162-6.158-17.285c-7.318-3.658-13.348,6.072-19.94,6.82    C261.327,274.785,260.722,275.977,262.056,275.825L262.056,275.825z" /></g></g>',
    '<g><g><path d="M256.977,275.178c-1.829,5.797-14.486,1.661-19.144,2.92c-1.586,0.43-4.187,1.205-4.391,3.215    c-0.351,3.457,3.271,4.582,6.104,4.812c0.384,0.031,2.206-0.67,1.264-0.746c-2.46-0.2-4.813-1.087-5.535-3.601    c-1.069-3.721,5.368-3.176,7.134-3.141c2.732,0.053,5.43,0.344,8.168,0.236c2.99-0.116,7.262-0.757,8.301-4.051    C258.981,274.493,257.124,274.711,256.977,275.178L256.977,275.178z" /></g></g>',
    '<g xmlns= "http://www.w3.org/2000/svg" style= "&#10;" ><g><path d="M242.813,286.594c5.692,0.551,10.363-0.945,15.603-2.998c3.484-1.365,7.132-2.533,10.857-2.984    c5.485-0.662,7.948,3.046,8.929,7.777c1.341,6.469-4.768,10.604-2.884,16.944c2.013,6.778,7.127,11.456,7.394,18.926    c0.024,0.693,1.96,0.285,1.932-0.518c-0.28-7.873-5.625-12.975-7.781-20.23c-1.127-3.793,2.575-7.403,3.327-11.03    c0.562-2.707,0.015-6.539-1.41-8.885c-2.643-4.354-7.014-4.621-11.641-3.802c-8.167,1.444-15.034,6.44-23.598,5.612    C242.74,285.329,241.507,286.467,242.813,286.594L242.813,286.594z" /></g></g>',
    '<g xmlns= "http://www.w3.org/2000/svg" ><g><path d="M204.326,346.391c4.202,0.04,8.08,1.451,12.052,2.66c3.313,1.008,6.702,1.316,10.121,1.784    c8.186,1.119,15.865,0.785,23.899-1.173c8.08-1.969,15.941-5.481,23.263-9.363c5.083-2.695,8.041-7.152,10.431-12.225    c0.445-0.944-1.503-0.839-1.828-0.148c-2.852,6.053-6.26,9.854-12.325,12.855c-6.927,3.428-14.095,6.296-21.613,8.128    c-8.348,2.035-16.366,1.259-24.754,0.158c-6.293-0.825-12.148-3.896-18.542-3.958    C204.182,345.102,203.018,346.378,204.326,346.391L204.326,346.391z" /></g></g>',
    '<g><g><path d="M199.453,345.09c-1.088,3.951-7.939,3.118-10.912,2.813c-3.977-0.411-7.595-2.459-11.326-3.761    c-8.756-3.05-19.089,1.396-27.094-3.288c-2.226-1.302-4.021-3.103-5.157-5.419c-1.651-3.367,1.966-5.241,4.53-6.213    c3.648-1.381,6.72-3.883,9.869-6.113c2.649-1.878,6.606-4.641,10.12-2.689c1.985,1.102,3.031,3.854,3.779,5.807    c1.07,2.793,1.238,5.917,2.485,8.624c1.786,3.881,13.28,14.566,5.388,17.198c-2.716,0.906-5.775,0.839-8.605,1.055    c-3.96,0.303-5.423-0.691-6.981-4.201c-1.023-2.307-1.571-4.813-2.059-7.274c-1.819-9.174-0.755-18.79-0.596-28.065    c0.194-11.335,1.89-22.567,2.009-33.898c0.01-0.948-1.94-0.608-1.948,0.18c-0.081,7.648-0.97,15.236-1.583,22.854    c-0.58,7.203-0.528,14.476-0.729,21.697c-0.165,5.944-0.048,11.874,0.915,17.753c0.547,3.337,1.882,11.003,6.021,12.091    c3.228,0.848,7.076,0.082,10.351-0.294c2.904-0.334,6.228-1.01,7.915-3.609c1.483-2.287-1.547-6.266-2.699-8.016    c-2.733-4.151-5.519-7.34-6.688-12.254c-1.885-7.923-5.699-14.214-14.347-10.188c-5.183,2.412-9.104,6.688-14.532,8.741    c-3.534,1.338-5.624,3.323-4.544,7.339c1.043,3.883,6.127,6.628,9.584,7.771c6.431,2.13,13.817-0.515,20.453,0.79    c8.2,1.613,15.862,7.475,24.598,4.031c1.851-0.729,3.192-1.667,3.734-3.636C201.636,344.06,199.667,344.313,199.453,345.09    L199.453,345.09z" /></g></g>',
    '<g><g><path d="M162.893,275.491c-0.016-6.409-0.156-12.804,0.994-19.138c0.111-0.611-1.817-0.27-1.919,0.291    c-1.164,6.412-1.022,12.873-1.006,19.363C160.962,276.475,162.895,276.146,162.893,275.491L162.893,275.491z" /></g></g>',
    '<g><g><path d="M165.643,251.491c-1.009-10.728,10.977-14.624,16.174-22.257c0.455-0.668-1.467-0.43-1.78,0.029    c-5.329,7.826-17.367,11.674-16.326,22.744C163.762,252.547,165.705,252.146,165.643,251.491L165.643,251.491z" /></g></g>',
    '<g><g><path d="M181.461,200.259c0.738,8.511,5.742,18.532-2.533,24.929c-0.805,0.623,1.129,0.41,1.497,0.125    c8.65-6.688,3.75-16.539,2.967-25.57C183.355,199.306,181.411,199.679,181.461,200.259L181.461,200.259z" /></g></g>',
    '<g><g><path d="M179.218,179.146c-0.915,5.745-4.662,15.006,1.305,19.207c0.498,0.351,2.216-0.418,1.808-0.706    c-5.819-4.096-2.093-13.149-1.195-18.793C181.235,178.236,179.306,178.591,179.218,179.146L179.218,179.146z" /></g></g>',
    '<g><g><path d="M198.546,147.798c-3.891,3.883-6.66,8.46-9.318,13.235c-3.156,5.67-7.996,10.125-11.007,15.875    c-0.187,0.356,1.642,0.203,1.912-0.314c2.514-4.8,6.344-8.654,9.392-13.097c3.668-5.349,6.101-11.12,10.784-15.793    C200.767,147.244,198.898,147.446,198.546,147.798L198.546,147.798z" /></g></g>',
    '<g><g><path d="M206.465,124.636c-3.668,6.735-0.354,14.999-7.052,20.245c-0.845,0.662,1.093,0.58,1.528,0.239    c6.943-5.438,3.646-13.776,7.448-20.755C208.642,123.901,206.772,124.073,206.465,124.636L206.465,124.636z" /></g></g>',
    '<g><g><path d="M209.819,121.446c3.677-3.298,6.021-6.69,11.057-8.208c3.739-1.126,7.556-1.662,11.257-2.988    c5.521-1.979,9.71-5.436,11.468-11.136c0.332-1.075-1.594-1.054-1.849-0.229c-2.54,8.233-10.505,10.74-18.183,12.313    c-2.657,0.544-5.439,1.175-7.785,2.605c-2.912,1.776-4.737,4.496-7.25,6.75C207.56,121.428,209.092,122.099,209.819,121.446    L209.819,121.446z" /></g></g>',
    '<g><g><path d="M241.336,97.555c5.642-9.446,16.219-14.464,25.457-19.709c1.136-0.646-0.537-1.085-1.23-0.691    c-9.487,5.387-20.248,10.586-26.043,20.291C239.015,98.289,240.972,98.165,241.336,97.555L241.336,97.555z" /></g></g>',
    '<g><g><path d="M269.793,74.589c8.346-3.755,14.872-8.764,24.333-9.527c5.527-0.446,10.12-1.966,11.739-7.75    c1.215-4.338,0.12-8.125,2.953-12.072c3.992-5.562,12.85-6.047,19.006-5.508c9.721,0.852,16.611,8.616,22.451,15.63    c0.384,0.461,2.232-0.207,1.803-0.724c-5.27-6.33-11.503-13.574-19.996-15.346c-7.285-1.52-15.233-0.823-21.684,3.063    c-3.168,1.909-4.994,4.777-5.719,8.347c-0.458,2.252-0.354,4.612-0.736,6.884c-0.794,4.712-5.301,6.104-9.521,6.522    c-4.047,0.401-7.51,0.858-11.316,2.398c-4.908,1.985-9.216,5.232-14.044,7.404C267.826,74.467,268.974,74.958,269.793,74.589    L269.793,74.589z" /></g></g>'
  ];
  var signline_arr = [
    '<g><path fill="red" stroke="red" stroke-width="1.5" d= "M515.079,338.042l-0.061-0.024c-0.429-0.175-0.756-0.176-1.046-0.177c-0.277,0.001-0.499,0-0.741-0.153   c-0.329-0.207-0.779-0.251-0.948-0.267c-0.246-0.022-0.493-0.021-0.734-0.019c-0.195,0.002-0.397,0.004-0.593-0.01   c-0.059-0.004-0.115,0-0.169,0.006c-0.056,0.003-0.107,0.007-0.16,0.004c-0.314-0.027-0.587-0.062-0.858-0.104   c-0.153-0.024-0.323-0.103-0.505-0.184c-0.154-0.07-0.315-0.143-0.479-0.188c-0.063-0.017-0.132-0.053-0.206-0.089   c-0.071-0.037-0.146-0.075-0.222-0.099c-0.392-0.125-0.77-0.216-1.154-0.278c-0.479-0.076-0.911-0.133-1.38-0.061   c-0.085,0.013-0.172,0.029-0.258,0.052c-0.295,0.072-0.603,0.229-0.899,0.38c-0.255,0.129-0.495,0.251-0.694,0.304l-0.024,0.007   c-0.273,0.071-0.559,0.146-0.858,0.191c-0.641,0.099-1.195,0.036-1.739-0.199c-0.002-0.021-0.008-0.037-0.025-0.052l-0.027-0.025   l-0.037,0.006c-0.02,0.004-0.063,0.019-0.067,0.085c0,0.008-0.001,0.019-0.001,0.034c-0.003,0.036-0.003,0.066-0.005,0.094   c-0.004,0.098-0.005,0.143-0.016,0.273c-0.002,0.022-0.004,0.047-0.007,0.069c-0.004,0.052-0.009,0.103-0.014,0.151   c-0.074,0.731-0.777,1.403-1.458,2.053c-0.733,0.701-1.427,1.36-1.399,2.106c0.039,1.096-1.157,2.634-1.978,3.33l-0.105,0.09   l0.13,0.046c1.043,0.373,3.451,1,4.317,1.092c0.167,0.017,0.42-0.003,0.818-0.064c0.193-0.029,0.403-0.066,0.606-0.102   c0.205-0.036,0.416-0.073,0.612-0.104c0.266-0.04,0.642-0.092,0.852-0.063c0.229,0.03,0.567-0.016,0.986-0.079l0.127-0.021   c0.479-0.073,1.076-0.166,1.41-0.053c0.146,0.049,0.293,0.104,0.438,0.161c0.137,0.055,0.275,0.119,0.407,0.182   c0.227,0.106,0.439,0.206,0.647,0.262c0.29,0.076,0.58,0.137,0.887,0.184c0.252,0.039,0.514,0.068,0.824,0.094   c0.044,0.004,0.093,0.021,0.146,0.04c0.062,0.021,0.124,0.044,0.19,0.048c0.201,0.016,0.399-0.002,0.592-0.019   c0.214-0.02,0.435-0.036,0.661-0.012c0.224,0.022,0.431,0.052,0.633,0.087c0.606,0.104,1.235,0.213,1.995,0.532l0.095,0.04   L515.079,338.042z" /><path fill="#E60012" d= "M512.466,356.348c0.043-0.008,0.077-0.045,0.084-0.094l2.853-18.217l0.043,0.006   c0.032,0.006,0.066,0.006,0.101,0c0.122-0.019,0.217-0.104,0.233-0.215c0.009-0.06-0.005-0.118-0.038-0.171   c0-0.003,0.001-0.006,0.001-0.009c0.01-0.064-0.011-0.133-0.057-0.185c-0.043-0.049-0.104-0.082-0.171-0.093l-0.01-0.002   l0.006-0.035c0.177-0.047,0.311-0.192,0.338-0.376c0.021-0.121-0.01-0.244-0.083-0.345s-0.181-0.165-0.303-0.186   c-0.047-0.007-0.095-0.008-0.142,0c-0.201,0.031-0.357,0.188-0.39,0.388c-0.023,0.157,0.036,0.317,0.156,0.423l-0.01,0.063   c-0.029-0.005-0.061-0.004-0.087,0.001c-0.11,0.018-0.195,0.096-0.21,0.193c-0.001,0.004-0.002,0.007-0.002,0.01   c-0.05,0.039-0.08,0.092-0.091,0.152c-0.011,0.07,0.013,0.145,0.063,0.201c0.048,0.056,0.115,0.092,0.189,0.104l0.031,0.004   l-2.807,17.938c-0.05,0.315-0.046,0.333-0.021,0.368c0.015,0.019,0.033,0.03,0.058,0.033l0.232,0.036   C512.446,356.349,512.457,356.349,512.466,356.348z" /></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M409.546,353.039c9.505-0.521,16.068,8.359,24.758,10.65c8.824,2.325,17.554-1.976,25.728-4.73    c11.737-3.958,21.245-0.458,32.722,1.768c6.839,1.326,14.446,1.325,20.525-2.437c1.111-0.688-0.576-0.967-1.201-0.58    c-9.244,5.722-20.562,1.197-30.158-0.968c-8.214-1.854-15.834-0.887-23.739,1.777c-4.095,1.382-8.072,3.013-12.279,4.048    c-6.709,1.649-12.15-0.188-17.824-3.5c-5.788-3.379-11.264-7.489-18.268-7.106C408.848,352.014,408.209,353.111,409.546,353.039    L409.546,353.039z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M366.896,342.426c6.153,1.954,12.002,5.172,18.355,6.456c7.096,1.435,14.54,2.232,21.779,2.345    c0.631,0.011,2.088-0.933,0.789-0.952c-7.467-0.115-15.504-0.868-22.768-2.68c-5.703-1.422-11.002-4.243-16.598-6.021    C367.939,341.41,366.193,342.202,366.896,342.426L366.896,342.426z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M342.831,331.669c7.946-0.35,14.125,6.095,20.346,10.119c0.675,0.436,2.396-0.497,1.5-1.076    c-6.747-4.364-13.056-10.759-21.653-10.381C341.956,330.378,341.51,331.728,342.831,331.669L342.831,331.669z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M311.053,310.153c8.104,0.049,12.208,2.443,16.417,9.406c2.84,4.7,5.799,10.216,11.664,11.32    c0.463,0.087,2.139-0.657,1.584-0.762c-7.275-1.371-10.058-9.678-13.921-15.053c-3.61-5.025-8.734-5.686-14.497-5.721    C311.885,309.345,310.094,310.147,311.053,310.153L311.053,310.153z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M286.885,287.631c4.813,1.61,8.194,5.961,12.133,8.952c4.56,3.462,8.468,6.14,11.193,11.426    c0.254,0.493,2.098-0.193,1.932-0.518c-2.611-5.064-6.565-8.514-11.307-11.574c-4.337-2.8-7.305-7.354-12.367-9.048    C288.023,286.721,286.294,287.434,286.885,287.631L286.885,287.631z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M262.056,275.825c6.393-0.726,11.272-8.401,17.788-7.271c6.792,1.178,6.609,11.779,6.615,16.805    c0.001,0.861,1.938,0.467,1.938-0.221c-0.007-6.065,0.086-14.162-6.158-17.285c-7.318-3.658-13.348,6.072-19.94,6.82    C261.327,274.785,260.722,275.977,262.056,275.825L262.056,275.825z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M256.977,275.178c-1.829,5.797-14.486,1.661-19.144,2.92c-1.586,0.43-4.187,1.205-4.391,3.215    c-0.351,3.457,3.271,4.582,6.104,4.812c0.384,0.031,2.206-0.67,1.264-0.746c-2.46-0.2-4.813-1.087-5.535-3.601    c-1.069-3.721,5.368-3.176,7.134-3.141c2.732,0.053,5.43,0.344,8.168,0.236c2.99-0.116,7.262-0.757,8.301-4.051    C258.981,274.493,257.124,274.711,256.977,275.178L256.977,275.178z" /></g></g>',
    '<g xmlns= "http://www.w3.org/2000/svg"><g><path fill="red" stroke="red" stroke-width="1.5" d="M242.813,286.594c5.692,0.551,10.363-0.945,15.603-2.998c3.484-1.365,7.132-2.533,10.857-2.984    c5.485-0.662,7.948,3.046,8.929,7.777c1.341,6.469-4.768,10.604-2.884,16.944c2.013,6.778,7.127,11.456,7.394,18.926    c0.024,0.693,1.96,0.285,1.932-0.518c-0.28-7.873-5.625-12.975-7.781-20.23c-1.127-3.793,2.575-7.403,3.327-11.03    c0.562-2.707,0.015-6.539-1.41-8.885c-2.643-4.354-7.014-4.621-11.641-3.802c-8.167,1.444-15.034,6.44-23.598,5.612    C242.74,285.329,241.507,286.467,242.813,286.594L242.813,286.594z" /></g></g>',
    '<g xmlns= "http://www.w3.org/2000/svg"><g><path fill="red" stroke="red" stroke-width="1.5" d="M204.326,346.391c4.202,0.04,8.08,1.451,12.052,2.66c3.313,1.008,6.702,1.316,10.121,1.784    c8.186,1.119,15.865,0.785,23.899-1.173c8.08-1.969,15.941-5.481,23.263-9.363c5.083-2.695,8.041-7.152,10.431-12.225    c0.445-0.944-1.503-0.839-1.828-0.148c-2.852,6.053-6.26,9.854-12.325,12.855c-6.927,3.428-14.095,6.296-21.613,8.128    c-8.348,2.035-16.366,1.259-24.754,0.158c-6.293-0.825-12.148-3.896-18.542-3.958    C204.182,345.102,203.018,346.378,204.326,346.391L204.326,346.391z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M199.453,345.09c-1.088,3.951-7.939,3.118-10.912,2.813c-3.977-0.411-7.595-2.459-11.326-3.761    c-8.756-3.05-19.089,1.396-27.094-3.288c-2.226-1.302-4.021-3.103-5.157-5.419c-1.651-3.367,1.966-5.241,4.53-6.213    c3.648-1.381,6.72-3.883,9.869-6.113c2.649-1.878,6.606-4.641,10.12-2.689c1.985,1.102,3.031,3.854,3.779,5.807    c1.07,2.793,1.238,5.917,2.485,8.624c1.786,3.881,13.28,14.566,5.388,17.198c-2.716,0.906-5.775,0.839-8.605,1.055    c-3.96,0.303-5.423-0.691-6.981-4.201c-1.023-2.307-1.571-4.813-2.059-7.274c-1.819-9.174-0.755-18.79-0.596-28.065    c0.194-11.335,1.89-22.567,2.009-33.898c0.01-0.948-1.94-0.608-1.948,0.18c-0.081,7.648-0.97,15.236-1.583,22.854    c-0.58,7.203-0.528,14.476-0.729,21.697c-0.165,5.944-0.048,11.874,0.915,17.753c0.547,3.337,1.882,11.003,6.021,12.091    c3.228,0.848,7.076,0.082,10.351-0.294c2.904-0.334,6.228-1.01,7.915-3.609c1.483-2.287-1.547-6.266-2.699-8.016    c-2.733-4.151-5.519-7.34-6.688-12.254c-1.885-7.923-5.699-14.214-14.347-10.188c-5.183,2.412-9.104,6.688-14.532,8.741    c-3.534,1.338-5.624,3.323-4.544,7.339c1.043,3.883,6.127,6.628,9.584,7.771c6.431,2.13,13.817-0.515,20.453,0.79    c8.2,1.613,15.862,7.475,24.598,4.031c1.851-0.729,3.192-1.667,3.734-3.636C201.636,344.06,199.667,344.313,199.453,345.09    L199.453,345.09z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M162.893,275.491c-0.016-6.409-0.156-12.804,0.994-19.138c0.111-0.611-1.817-0.27-1.919,0.291    c-1.164,6.412-1.022,12.873-1.006,19.363C160.962,276.475,162.895,276.146,162.893,275.491L162.893,275.491z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M165.643,251.491c-1.009-10.728,10.977-14.624,16.174-22.257c0.455-0.668-1.467-0.43-1.78,0.029    c-5.329,7.826-17.367,11.674-16.326,22.744C163.762,252.547,165.705,252.146,165.643,251.491L165.643,251.491z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M181.461,200.259c0.738,8.511,5.742,18.532-2.533,24.929c-0.805,0.623,1.129,0.41,1.497,0.125    c8.65-6.688,3.75-16.539,2.967-25.57C183.355,199.306,181.411,199.679,181.461,200.259L181.461,200.259z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M179.218,179.146c-0.915,5.745-4.662,15.006,1.305,19.207c0.498,0.351,2.216-0.418,1.808-0.706    c-5.819-4.096-2.093-13.149-1.195-18.793C181.235,178.236,179.306,178.591,179.218,179.146L179.218,179.146z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M198.546,147.798c-3.891,3.883-6.66,8.46-9.318,13.235c-3.156,5.67-7.996,10.125-11.007,15.875    c-0.187,0.356,1.642,0.203,1.912-0.314c2.514-4.8,6.344-8.654,9.392-13.097c3.668-5.349,6.101-11.12,10.784-15.793    C200.767,147.244,198.898,147.446,198.546,147.798L198.546,147.798z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M206.465,124.636c-3.668,6.735-0.354,14.999-7.052,20.245c-0.845,0.662,1.093,0.58,1.528,0.239    c6.943-5.438,3.646-13.776,7.448-20.755C208.642,123.901,206.772,124.073,206.465,124.636L206.465,124.636z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M209.819,121.446c3.677-3.298,6.021-6.69,11.057-8.208c3.739-1.126,7.556-1.662,11.257-2.988    c5.521-1.979,9.71-5.436,11.468-11.136c0.332-1.075-1.594-1.054-1.849-0.229c-2.54,8.233-10.505,10.74-18.183,12.313    c-2.657,0.544-5.439,1.175-7.785,2.605c-2.912,1.776-4.737,4.496-7.25,6.75C207.56,121.428,209.092,122.099,209.819,121.446    L209.819,121.446z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M241.336,97.555c5.642-9.446,16.219-14.464,25.457-19.709c1.136-0.646-0.537-1.085-1.23-0.691    c-9.487,5.387-20.248,10.586-26.043,20.291C239.015,98.289,240.972,98.165,241.336,97.555L241.336,97.555z" /></g></g>',
    '<g><g><path fill="red" stroke="red" stroke-width="1.5" d="M269.793,74.589c8.346-3.755,14.872-8.764,24.333-9.527c5.527-0.446,10.12-1.966,11.739-7.75    c1.215-4.338,0.12-8.125,2.953-12.072c3.992-5.562,12.85-6.047,19.006-5.508c9.721,0.852,16.611,8.616,22.451,15.63    c0.384,0.461,2.232-0.207,1.803-0.724c-5.27-6.33-11.503-13.574-19.996-15.346c-7.285-1.52-15.233-0.823-21.684,3.063    c-3.168,1.909-4.994,4.777-5.719,8.347c-0.458,2.252-0.354,4.612-0.736,6.884c-0.794,4.712-5.301,6.104-9.521,6.522    c-4.047,0.401-7.51,0.858-11.316,2.398c-4.908,1.985-9.216,5.232-14.044,7.404C267.826,74.467,268.974,74.958,269.793,74.589    L269.793,74.589z" /></g></g>'
  ];
  var markStar_arr = [
    '<polygon fill="#DCC684" stroke="#DCC684" points="513.886,354.744 518.692,355.558 515.124,358.878 515.836,363.7 511.574,361.332 507.207,363.499 508.143, 358.716 504.732, 355.231 509.571, 354.643 511.83, 350.324 		"/>',
    '<polygon fill="#DCC684" stroke="#DCC684" points= "411.552,349.12 416.357,349.934 412.79,353.254 413.502,358.076 409.24,355.708 404.873,357.875   405.809,353.092 402.398,349.607 407.236,349.019 409.496,344.7 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "367.886,338.744 372.691,339.558 369.124,342.878 369.836,347.7 365.574,345.332 361.207,347.499   362.143,342.716 358.732,339.231 363.57,338.643 365.83,334.324 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "343.369,327.308 348.176,328.121 344.607,331.441 345.318,336.264 341.059,333.896 336.689,336.063   337.626,331.279 334.216,327.795 339.055,327.206 341.313,322.888 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "314.371,306.102 319.178,306.915 315.609,310.235 316.32,315.058 312.06,312.689 307.692,314.856   308.628,310.073 305.218,306.589 310.057,306 312.315,301.682 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "290.572,284.037 295.379,284.852 291.811,288.171 292.522,292.993 288.261,290.625 283.894,292.792   284.829,288.009 281.419,284.523 286.258,283.936 288.517,279.617 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "262.364,273.262 266.794,275.296 262.485,277.575 261.92,282.417 258.42,279.021 253.64,279.98   255.786,275.604 253.398,271.354 258.224,272.042 261.528,268.459 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "242.618,284.055 247.313,285.364 243.418,288.295 243.625,293.165 239.633,290.366 235.063,292.066   236.492,287.407 233.463,283.586 238.337,283.505 241.033,279.443 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "286.35,322.357 290.82,324.303 286.559,326.668 286.091,331.521 282.523,328.197 277.763,329.252   279.821,324.834 277.347,320.632 282.186,321.223 285.416,317.573 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "204.919,342.433 209.726,343.246 206.158,346.566 206.871,351.389 202.609,349.021 198.242,351.188   199.177,346.404 195.767,342.92 200.605,342.331 202.865,338.013 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "164.572,274.453 169.379,275.268 165.811,278.587 166.522,283.409 162.261,281.041 157.894,283.208   158.829,278.425 155.419,274.939 160.258,274.352 162.517,270.033 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "166.188,251.523 170.75,253.24 166.613,255.818 166.392,260.688 162.66,257.55 157.96,258.843   159.792,254.326 157.109,250.256 161.971,250.602 165.013,246.793 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "182.776,225.322 186.756,228.139 182.102,229.586 180.654,234.24 177.839,230.258 172.964,230.32   175.879,226.414 174.316,221.796 178.932,223.361 182.839,220.447 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "183.233,196.522 188.04,195.715 185.757,200.021 188.009,204.344 183.208,203.503 179.792,206.982   179.108,202.154 174.744,199.98 179.123,197.839 179.842,193.019 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "182.151,174.833 186.958,175.646 183.39,178.966 184.102,183.79 179.84,181.42 175.473,183.587   176.408,178.804 172.998,175.32 177.837,174.731 180.096,170.414 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "202.3,144.235 206.305,147.014 201.664,148.503 200.258,153.17 197.407,149.215 192.533,149.321   195.413,145.388 193.807,140.785 198.438,142.309 202.317,139.36 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "211.626,122.869 215.416,125.935 210.677,127.078 208.932,131.63 206.38,127.476 201.511,127.222   204.673,123.513 203.41,118.803 207.916,120.664 212.002,118.008 " />',
    '<polygon stroke="#DCC684" fill= "#DCC684" points= "243.552,95.518 248.358,96.332 244.79,99.652 245.502,104.474 241.24,102.106 236.873,104.273   237.809,99.49 234.398,96.005 239.237,95.417 241.496,91.098 " />',
    '<polygon stroke="#DCC684" fill="#DCC684" points= "271.452,75.693 273.532,80.103 268.768,79.072 265.217,82.412 264.725,77.562 260.451,75.216   264.911,73.25 265.821,68.46 269.07,72.095 273.904,71.481 " />',
    '<polygon fill="#DCC684" stroke="#DCC684" points="354.104,54.383 358.91,55.196 355.342,58.517 356.053,63.339 351.793,60.971 347.426,63.138 348.361, 58.354 344.951, 54.87 349.789, 54.281 352.049, 49.963 		"/>'
  ];


  var svg_xml = '<svg preserveAspectRatio="xMinYMin meet" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="B_1" x="0px" y="0px" viewBox="10 0 640 400" enable-background="new 0 0 640 400" xml:space="preserve">';

  

  // var lastday = new Date(list[0]['checkDate']);
  var lastday = new Date(startTime);

  var thisday = new Date(list[list.length - 1]['checkDate']);
  var daysCount = new Date(thisday - lastday).getDate();

  var _getCheckLine = 0;    //从9月1号开始计算打卡天数

  var $days = [];
  for (var i = 0; i < 20; i++) {
    // var signfirst = new Date(list[0]['checkDate']); //签到第一日的日期
    var signfirst = new Date(startTime); //签到第一日的日期
    var $day = signfirst.getDate();
    $days.push(timeUtil.formatTime(new Date(signfirst.setDate($day + i))));  //从第一次签到的20天日期

    if(!checkDate[$days[i]]){
      svg_xml += circle_arr[i];
      if (i < daysCount){
        svg_xml += unSignCircle_arr[i];
      }
    }
  }
  for (var j = 0; j < 20; j++) {
    svg_xml += text_arr[j];       //文字
  }
  
  for(var m=0;m<20;m++){      //线
    // if (!checkDate[$days[m]]) {
    //   svg_xml += line_arr[m];
    // }
    if (m < daysCount){
      continue;
    }else{
      svg_xml += line_arr[m];
    }
  }

  
  for (var p = 0; p < daysCount ;p++){        //已签到线
    svg_xml += signline_arr[p];
  }
  
  for (var n = 0; n < 20; n++) {     //五角星
    if (checkDate[$days[n]]){
      // console.log(n);
      svg_xml += markStar_arr[n];
      _getCheckLine++;
    }
  }
  that.setData({
    getCheckLine: _getCheckLine,
  })

  svg_xml += '</svg>';
  var svg_xml_byte = stringToByte(svg_xml);

  var svg_xml_base64 = wx.arrayBufferToBase64(svg_xml_byte);
  svg_xml_base64 = 'data:image/svg+xml;base64,' + svg_xml_base64;

  const svg_xml_base640 = svg_xml_base64;
  setTimeout(function () {
    that.setData({
      svgurl: svg_xml_base640
    });
  }, 1100);
}
function stringToByte(str) {
  var bytes = new Array();
  var len, c;
  len = str.length;
  for (var i = 0; i < len; i++) {
    c = str.charCodeAt(i);
    if (c >= 0x010000 && c <= 0x10FFFF) {
      bytes.push(((c >> 18) & 0x07) | 0xF0);
      bytes.push(((c >> 12) & 0x3F) | 0x80);
      bytes.push(((c >> 6) & 0x3F) | 0x80);
      bytes.push((c & 0x3F) | 0x80);
    } else if (c >= 0x000800 && c <= 0x00FFFF) {
      bytes.push(((c >> 12) & 0x0F) | 0xE0);
      bytes.push(((c >> 6) & 0x3F) | 0x80);
      bytes.push((c & 0x3F) | 0x80);
    } else if (c >= 0x000080 && c <= 0x0007FF) {
      bytes.push(((c >> 6) & 0x1F) | 0xC0);
      bytes.push((c & 0x3F) | 0x80);
    } else {
      bytes.push(c & 0xFF);
    }
  }
  return bytes;
}
//////////////////////////////////创建动画///////////////////////
function createAni(that){
  var animation = wx.createAnimation({
    duration: 600,
    timingFunction: 'ease',
  })
  var topslide = wx.createAnimation({
    duration: 600,
    timingFunction: 'ease',
  })

  var topslide1 = wx.createAnimation({
    duration: 600,
    timingFunction: 'ease',
  })

  that.animation = animation
  animation.height('420rpx').step()

  that.topslide = topslide;
  topslide.height('250rpx').step();

  that.topslide1 = topslide1;
  topslide1.height('310rpx').step();

  that.setData({
    animationData: animation.export(),
    topAnimation: topslide.export(),
    topAnimation1: topslide1.export(),
    ifOn: false,
    scaleJust: false,
  })
  setTimeout(function () {
    that.setData({
      ifshow: true,
    })
  }.bind(that), 600)
}